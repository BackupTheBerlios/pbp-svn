@globs = {}
@execfile('pbp/version.py', globs)
:syseval svnversion . | :assign revision
shortver = `globs['version']`
@if _no.shortver.endswith('+'):
    version = $(shortver)r$(revision)
@else:
    version = $(shortver)
@from twisted.python import util
NSIS = C:\Program Files\nsis\makensis.exe

all: pbp-$(version)-setup.exe pbp-$(version).zip
    :print : Done with all.


pbp-$(version).zip: _version.py pbp/wwwsearch.zip
    :sys python setup.py sdist  --force-manifest --dist-dir .

pbp-$(version)-setup.exe: dist/pbpscript.exe pbp/wwwsearch.zip pbp.nsi _version.nsh
    :copy pbp/wwwsearch.zip dist

    :sys "$(NSIS)" pbp.nsi

_version.py _version.nsh:
    # rebuilt automatically when _no.version changes :-) yay aap
    @lines = ["version = '%s'\n" % (_no.version,),
    @         '!define PRODUCT_VERSION "%s"\n' % (_no.version,)]
    @file('_version.py', 'w').write(lines[0])
    @file('_version.nsh', 'w').write(lines[1])
    

dist/pbpscript.exe: _version.py
    :sys python setup.py py2exe
    :copy LICENSE.txt dist
    :copy {r} 3rdparty dist
    :copy {r} buildbot dist

clean:
    :sys {f} python setup.py clean --all
    :del {f} *.nsh* *.exe *.zip MANIFEST _version.py
    :del {r}{f} dist build
