This document should be read by someone already familiar with buildbot, and
what it's useful for (testing and building software automatically every time a
CVS or SVN commit occurs).  It assumes familiarity with setting up buildbot at
a basic level.  

I will describe how to add a pbp builder to your buildbot configuration.

---

1. Install buildbot from http://buildbot.sourceforge.net/ on a master
and on one buildslave.

2. On the buildmaster, copy pbpstep.py from the buildbot directory of pbp into
somewhere in sys.path.

3. On the buildmaster, set up master.cfg to import and use pbpstep, e.g.:
    # ...
    import pbpstep
    pbp_bf = base.ConfigurableBuildFactory([
        (pbpstep.PBP, {'filename': 'directory/to/pbp_tests/foo.tests'}),
        (pbpstep.PBP, {'filename': 'directory/to/pbp_tests/bar.tests'}),
        ])
    BuildmasterConfig = {}
    # ... define some bots in BuildmasterConfig['bots']
    BuildmasterConfig['builders'] = [ # ...
                                      ('pbp-tests', 'mybot', '.', pbp_bf),
                                     ]

4. In master.cfg make sure the 'filename' argument points to a valid .tests
file, which is just a shell script.
For example:
[foo.tests]
    #!/bin/bash
    pbpscript test1.pbp test2.pbp test3.pbp
    pbpscript test1.pbp test4.pbp
    pbpscript test1.pbp test5.pbp test6.pbp 
    # ...

5. On the buildslave, copy run_pbpscript.bash from the buildbot directory of
pbp into the buildslave's working directory.  Make sure it is executable. 


Done!

When buildbot runs, it will cd into directory/to/pbp_tests/ and then run the
named script file with bash.  The output will be interpreted as pbp log
output, for the purposes of counting failures and successes.

On the waterfall page, buildbot will display the number of successes and
failures for buildbot.

